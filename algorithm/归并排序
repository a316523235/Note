<?php

/**
 * 归并排序
 * @param $arr
 */
function mergeSort(&$arr) {
    if(count($arr) == 1) {
        return;
    }
    //一分为二
    $middle = ceil(count($arr) / 2);
    $left = array_slice($arr, 0, $middle);
    $right = array_slice($arr, $middle);

    //左右数组进行归并排序
    mergeSort($left);
    mergeSort($right);

    //合并并排序左右数组
    merge($arr, $left, $right);
}

/**
 * 合并并排序数组
 * @param array $arr 原始数组
 * @param array $left 左数组
 * @param array $right 右数组
 */
function merge(&$arr, $left, $right) {
    $index = $i = $j = 0;
    $lCnt = count($left);
    $rCnt = count($right);

    //哪个小取哪个
    while($i < $lCnt && $j < $rCnt) {
        $arr[$index++] = $left[$i] <= $right[$j] ? $left[$i++] : $right[$j++];
    }

    //取左数组剩余的数据
    while ($i < $lCnt) {
        $arr[$index++] = $left[$i++];
    }

    //取右数组剩余的数据
    while ($j < $rCnt) {
        $arr[$index++] = $right[$j++];
    }
}

$arr = [-1, 6, 7, 8, 9, 11, 1, 2, 4, 3, -2];
mergeSort($arr);
print_r($arr);
